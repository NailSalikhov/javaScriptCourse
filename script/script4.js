"use strict";

//Создайте функцию, которая будет вычислять объем и площадь полной поверхности куба (тоже базовая математика, иногда используется в создании анимаций). Эта функция принимает в себя целое число со значением длины ребра куба. Ответ выведите в формате строки, который изображен в примерах.Если в функцию попал неправильный аргумент или вычислить значения невозможно - вернуть строку "При вычислении произошла ошибка"

function calculateVolumeAndArea(a) {
  if (typeof a !== "number" || a < 0 || !Number.isInteger(a)) {
    return "При вычислении произошла ошибка";
  }

  let volume = 0;
  let area = 0;

  volume = a * a * a;
  area = 6 * (a * a);
  return `Объем куба: ${volume}, площадь всей поверхности: ${area}`;
}

calculateVolumeAndArea(5);

//Напишите функцию, которая будет определять номер купе по переданному ей номеру места.

function getCoupeNumber(seat) {
  if (seat === 0 || seat > 36) {
    return "Таких мест в вагоне не существует";
  }
  if (seat < 0 || !Number.isInteger(seat) || typeof seat !== "number") {
    return "Ошибка. Проверьте правильность введенного номера места";
  }

  return Math.ceil(seat / 4);
}
getCoupeNumber(5);

//Создайте функцию, которая принимает в себя целое число минут и возвращает время в нужном формате строки. (Смотри пример). Обратите внимание на окончание слова "час" - оно меняется в зависимости от цифры. Если вместо аргумента приходит не число, дробное или отрицательное число - функция возвращает строку "Ошибка, проверьте данные"

function getTimeFromMinutes(min) {
  if (typeof min !== "number" || min < 0 || !Number.isInteger(min)) {
    return "Ошибка, проверьте данные";
  }

  let hour = 0;
  let minutes = 0;

  hour = Math.floor(min / 60);
  minutes = min % 60;

  if (hour == 1) {
    return `Это ${hour} час и ${minutes} минут`;
  } else if (hour == 2 || hour == 3 || hour == 4) {
    return `Это ${hour} часа и ${minutes} минут`;
  } else {
    return `Это ${hour} часов и ${minutes} минут`;
  }
}
getTimeFromMinutes(180);

// Напишите функцию, которая принимает в себя 4 числа и возвращает самое большее из них. Если один из аргументов не является числом или их меньше 4 - возвращается 0. Дробные числа разрешены.

function findMaxNumber(a, b, c, d) {
  if (
    typeof a !== "number" ||
    typeof b !== "number" ||
    typeof c !== "number" ||
    typeof d !== "number"
  ) {
    return 0;
  } else {
    return Math.max(a, b, c, d);
  }
}
findMaxNumber(1, 5, 6.6, 10.5);
findMaxNumber(1, 5, "6", "10");

// Создайте функцию, которая будет принимать в себя один аргумент-целое положительное число. Она должна возвращать строку, в которой будут через пробел выведены числа Фибоначчи. Причем, их количество должно быть равно переданному аргументу.
// Если переданный аргумент не число - вернуть пустую строку. Решать без применения рекурсии.
// Пример: fib(4) => ''0 1 1 2"
// fib(7) => ''0 1 1 2 3 5 8"
// fib('7') => ''"
// fib(1) => "0"
// fib(0) => ''"

function fib(num) {
  if (typeof num != "number" || num <= 0 || !Number.isInteger(num)) {
    return "";
  }

  let result = "";
  let a = 0;
  let b = 1;

  for (let i = 0; i < num; i++) {
    if (i + 1 == num) {
      result += `${a}`;
    } else {
      result += `${a} `;
    }

    let c = a + b;
    a = b;
    b = c;
  }
  console.log(result);
}

fib(7);
