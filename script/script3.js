"use strict";

// Создайте функцию, которая будет на вход принимать 1 аргумент с именем человека и возвращать строку.
// Пример: вызов функции sayHello('Антон') возвращает строку "Привет, Антон!".
//В решении вызывать функцию не нужно, программа сделает это за вас.

function sayHello(name) {
  console.log(`Привет, ${name}!`);
  return `Привет, ${name}!`;
}
sayHello("Наиль");

//2) Создайте функцию, которая принимает в себя 1 аргумент в виде целого числа и возвращает массив из трех чисел:
// одно на 1 меньше, сам аргумент, и число на 1 больше.
// Пример: вызов функции returnNeighboringNumbers(5) возвращает массив в виде [4, 5, 6].

function returnNeighboringNumbers(num) {
  console.log([num - 1, num, num + 1]);
  return [num - 1, num, num + 1];
}
returnNeighboringNumbers(5);

//Создайте функцию, которая будет принимать в себя 2 аргумента, оба числа. Первое число - это база, второе число - это сколько раз нужно будет повторить это число в прогрессии. (Смотри пример ниже). Функция должна возвращать строку (или число в особых случаях, о которых ниже), где эти числа идут по порядку, разделенные тремя дефисами "---". После последнего числа их не должно быть.
//Если второй аргумент не является числом, равен или меньше нуля - то возвращать просто первый аргумент. (Проверяем через оператор typeof)

function getMathResult(num, times) {
  if (typeof times !== "number" || times <= 0) {
    return num;
  }

  let str = "";

  for (let i = 1; i <= times; i++) {
    if (i === times) {
      str += `${num * i}`;
    } else {
      str += `${num * i}---`; // str = str + num * i + "---"
    }
  }
  console.log(str);
  return str;
}
getMathResult(10, 5);

const myName = "Nail";
console.log(`My name is ${myName}`);
console.log("My name is " + myName);
// про альтернативное использование косых кавычек и их смысла
